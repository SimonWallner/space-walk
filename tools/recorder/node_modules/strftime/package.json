{
  "name": "strftime",
  "description": "strftime for JavaScript",
  "version": "0.8.0",
  "homepage": "http://samhuri.net/proj/strftime",
  "author": {
    "name": "Sami Samhuri",
    "email": "sami@samhuri.net"
  },
  "contributors": [
    {
      "name": "Sami Samhuri",
      "email": "sami@samhuri.net",
      "url": "http://samhuri.net"
    },
    {
      "name": "Andrew Schaaf",
      "email": "andrew@andrewschaaf.com",
      "url": "http://andrewschaaf.com/"
    },
    {
      "name": "Rob Colburn",
      "email": "rob@robcolburn.com",
      "url": "http://robcolburn.com/"
    },
    {
      "name": "Ryan Stafford",
      "url": "http://droffats.net/"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/samsonjs/strftime.git"
  },
  "bugs": {
    "url": "https://github.com/samsonjs/strftime/issues",
    "email": "sami@samhuri.net"
  },
  "main": "./strftime.js",
  "engines": {
    "node": ">=0.2.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://sjs.mit-license.org"
    }
  ],
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "strftime\n========\n\nstrftime for JavaScript, works in Node.js and browsers, supports localization.\nMost standard specifiers from C are supported as well as some other extensions\nfrom Ruby.\n\n\nInstallation\n============\n\nnpm install strftime\n\n\nUsage\n=====\n\n    var strftime = require('strftime')\n    console.log(strftime('%B %d, %y %H:%M:%S')) // => April 28, 2011 18:21:08\n    console.log(strftime('%F %T', new Date(1307472705067))) // => 2011-06-07 18:51:45\n\n\nIf you want to localize it:\n\n    var strftime = require('strftime')\n    var it_IT = {\n        days: [ 'domenica', 'lunedi', 'martedi', 'mercoledi', 'giovedi', 'venerdi', 'sabato' ],\n        shortDays: [ 'dom', 'lun', 'mar', 'mer', 'gio', 'ven', 'sab' ],\n\n        months: [ 'gennaio', 'febbraio', 'marzo', 'aprile', 'maggio', 'giugno', 'luglio',\n                  'agosto', 'settembre', 'ottobre', 'novembre', 'dicembre' ],\n\n        shortMonths: [ 'gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago',\n                       'set', 'ott', 'nov', 'dic' ],\n        AM: 'AM',\n        PM: 'PM'\n    }\n    console.log(strftime('%B %d, %y %H:%M:%S', it_IT)) // => aprile 28, 2011 18:21:08\n    console.log(strftime('%B %d, %y %H:%M:%S', new Date(1307472705067), it_IT)) // => giugno 7, 2011 18:51:45\n\nAnd if you don't want to pass a localization object every time you can get a localized `strftime` function like so:\n\n    var strftime = require('strftime')\n    var it_IT = { /* same as above */ }\n    var strftime_IT = strftime.localizedStrftime(it_IT)\n    console.log(strftime_IT('%B %d, %y %H:%M:%S')) // aprile 28, 2011 18:21:08\n\n\nTime zones can be passed in as an offset from GMT in minutes.\n\n    var strftimeTZ = require('strftime').strftimeTZ\n    console.log(strftimeTZ('%B %d, %y %H:%M:%S', new Date(1307472705067), -420)) // => June 07, 11 11:51:45\n    console.log(strftimeTZ('%F %T', new Date(1307472705067), 120)) // => 2011-06-07 20:51:45\n\n\nAlternatively you can use the timezone format used by ISO 8601, `+HHMM` or `-HHMM`.\n\n    var strftimeTZ = require('strftime').strftimeTZ\n    console.log(strftimeTZ('', new Date(1307472705067), '-0700')) // => June 07, 11 11:51:45\n    console.log(strftimeTZ('%F %T', new Date(1307472705067), '+0200')) // => 2011-06-07 20:51:45\n\n\nSupported Specifiers\n====================\n\nExtensions from Ruby are noted in the following list.\n\nUnsupported specifiers are rendered without the percent sign.\ne.g. `%q` becomes `q`. Use `%%` to get a literal `%` sign.\n\n- A: full weekday name\n- a: abbreviated weekday name\n- B: full month name\n- b: abbreviated month name\n- C: AD century (year / 100), padded to 2 digits\n- D: equivalent to `%m/%d/%y`\n- d: day of the month, padded to 2 digits (01-31)\n- e: day of the month, padded with a leading space for single digit values (1-31)\n- F: equivalent to `%Y-%m-%d`\n- H: the hour (24-hour clock), padded to 2 digits (00-23)\n- h: the same as %b (abbreviated month name)\n- I: the hour (12-hour clock), padded to 2 digits (01-12)\n- j: day of the year, padded to 3 digits (001-366)\n- k: the hour (24-hour clock), padded with a leading space for single digit values (0-23)\n- L: the milliseconds, padded to 3 digits [Ruby extension]\n- l: the hour (12-hour clock), padded with a leading space for single digit values (1-12)\n- M: the minute, padded to 2 digits (00-59)\n- m: the month, padded to 2 digits (01-12)\n- n: newline character\n- o: day of the month as an ordinal (without padding), e.g. 1st, 2nd, 3rd, 4th, ...\n- P: \"am\" or \"pm\" in lowercase [Ruby extension]\n- p: \"AM\" or \"PM\"\n- R: equivalent to `%H:%M`\n- r: equivalent to `%I:%M:%S %p`\n- S: the second, padded to 2 digits (00-60)\n- s: the number of seconds since the Epoch, UTC\n- T: equivalent to `%H:%M:%S`\n- t: tab character\n- U: week number of the year, Sunday as the first day of the week, padded to 2 digits (00-53)\n- u: the weekday, Monday as the first day of the week (1-7)\n- v: equivalent to `%e-%b-%Y`\n- W: week number of the year, Monday as the first day of the week, padded to 2 digits (00-53)\n- w: the weekday, Sunday as the first day of the week (0-6)\n- Y: the year with the century\n- y: the year without the century (00-99)\n- Z: the time zone name, replaced with an empty string if it is not found\n- z: the time zone offset from UTC, with a leading plus sign for UTC and zones east\n     of UTC and a minus sign for those west of UTC, hours and minutes follow each\n     padded to 2 digits and with no delimiter between them\n\nFor more detail see `man 3 strftime` as the format specifiers should behave\nidentically. If behaviour differs please [file a bug](https://github.com/samsonjs/strftime/issues/new).\n\nAny specifier can be modified with `-`, `_`, or `0` as well, as in Ruby.\nUsing `%-` will omit any leading zeroes or spaces, `%_` will force spaces\nfor padding instead of the default, and `%0` will force zeroes for padding.\nThere's some redundancy here as `%-d` and `%e` have the same result, but it\nsolves some awkwardness with formats like `%l`.\n\nContributors\n============\n\n* [Sami Samhuri](https://github.com/samsonjs)\n* [Andrew Schaaf](https://github.com/andrewschaaf)\n* [Rob Colburn](https://github.com/robcolburn)\n* [Ryan Stafford](https://github.com/ryanstafford)\n\n\nLicense\n=======\n\nCopyright 2010 - 2013 Sami Samhuri sami@samhuri.net\n\n[MIT license](http://sjs.mit-license.org)\n\n",
  "readmeFilename": "Readme.md",
  "_id": "strftime@0.8.0",
  "dist": {
    "shasum": "01a3db1d2b01ea05ccd30c5d675f45f11a538fb4"
  },
  "_from": "strftime@",
  "_resolved": "https://registry.npmjs.org/strftime/-/strftime-0.8.0.tgz"
}
